'Test for 2-matrix_divided'

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

>>> matrix_divided([2, 6, 8], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[2, 4, 6], "hello!"], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[4, 5, 6], [1]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[2], [4]], 1)
[[2.0], [4.0]]

>>> matrix_divided([[6, 8, 10], [2, 4, 6]], 4)
[[1.5, 2.0, 2.5], [0.5, 1.0, 1.5]]

>>> matrix_divided([[6], [8]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix_divided([[5]], 1)
[[5.0]]

>>> matrix_divided([[2, 4], [6, 8]], "hello!")
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([[5], [6]])
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided([[2, 4, 6], [8, 10, 12]], float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]